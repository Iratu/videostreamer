diff --git a/trunk/auto/depends.sh b/trunk/auto/depends.sh
index 7b7356e..0020bc0 100644
--- a/trunk/auto/depends.sh
+++ b/trunk/auto/depends.sh
@@ -16,12 +16,13 @@
 #####################################################################################
 function require_sudoer()
 {
-    sudo echo "" >/dev/null 2>&1
-    
-    ret=$?; if [[ 0 -ne $ret ]]; then 
-        echo "\"$1\" require sudoer failed. ret=$ret";
-        exit $ret; 
-    fi
+return 0
+#    sudo echo "" >/dev/null 2>&1
+#    
+#    ret=$?; if [[ 0 -ne $ret ]]; then 
+#        echo "\"$1\" require sudoer failed. ret=$ret";
+#        exit $ret; 
+#    fi
 }
 
 # TODO: check gcc/g++
@@ -33,21 +34,12 @@ echo "depends tools are ok"
 OS_IS_UBUNTU=NO
 function Ubuntu_prepare()
 {
-    if [ $SRS_CUBIE = YES ]; then
-        echo "for cubieboard, use ubuntu prepare"
-    else
-        uname -v|grep Ubuntu >/dev/null 2>&1
-        ret=$?; if [[ 0 -ne $ret ]]; then
-            return 0;
-        fi
-    fi
-    
     # for arm, install the cross build tool chain.
     if [ $SRS_ARM_UBUNTU12 = YES ]; then
         $SrsArmCC --help >/dev/null 2>&1; ret=$?; if [[ 0 -ne $ret ]]; then
             echo "install gcc-arm-linux-gnueabi g++-arm-linux-gnueabi"
             require_sudoer "sudo apt-get install -y --force-yes gcc-arm-linux-gnueabi g++-arm-linux-gnueabi"
-            sudo apt-get install -y --force-yes gcc-arm-linux-gnueabi g++-arm-linux-gnueabi; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
+            #sudo apt-get install -y --force-yes gcc-arm-linux-gnueabi g++-arm-linux-gnueabi; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
             echo "install gcc-arm-linux-gnueabi g++-arm-linux-gnueabi success"
         fi
     fi
@@ -66,35 +58,35 @@ function Ubuntu_prepare()
     gcc --help >/dev/null 2>&1; ret=$?; if [[ 0 -ne $ret ]]; then
         echo "install gcc"
         require_sudoer "sudo apt-get install -y --force-yes gcc"
-        sudo apt-get install -y --force-yes gcc; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
+        #sudo apt-get install -y --force-yes gcc; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
         echo "install gcc success"
     fi
     
     g++ --help >/dev/null 2>&1; ret=$?; if [[ 0 -ne $ret ]]; then
         echo "install g++"
         require_sudoer "sudo apt-get install -y --force-yes g++"
-        sudo apt-get install -y --force-yes g++; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
+        #sudo apt-get install -y --force-yes g++; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
         echo "install g++ success"
     fi
     
     make --help >/dev/null 2>&1; ret=$?; if [[ 0 -ne $ret ]]; then
         echo "install make"
         require_sudoer "sudo apt-get install -y --force-yes make"
-        sudo apt-get install -y --force-yes make; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
+        #sudo apt-get install -y --force-yes make; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
         echo "install make success"
     fi
     
     patch --help >/dev/null 2>&1; ret=$?; if [[ 0 -ne $ret ]]; then
         echo "install patch"
         require_sudoer "sudo apt-get install -y --force-yes patch"
-        sudo apt-get install -y --force-yes patch; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
+        #sudo apt-get install -y --force-yes patch; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
         echo "install patch success"
     fi
     
     unzip --help >/dev/null 2>&1; ret=$?; if [[ 0 -ne $ret ]]; then
         echo "install unzip"
         require_sudoer "sudo apt-get install -y --force-yes unzip"
-        sudo apt-get install -y --force-yes unzip; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
+        #sudo apt-get install -y --force-yes unzip; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
         echo "install unzip success"
     fi
 
@@ -102,7 +94,7 @@ function Ubuntu_prepare()
         if [[ ! -f /usr/include/pcre.h ]]; then
             echo "install libpcre3-dev"
             require_sudoer "sudo apt-get install -y --force-yes libpcre3-dev"
-            sudo apt-get install -y --force-yes libpcre3-dev; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
+            #sudo apt-get install -y --force-yes libpcre3-dev; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
             echo "install libpcre3-dev success"
         fi
     fi
@@ -111,21 +103,21 @@ function Ubuntu_prepare()
         autoconf --help >/dev/null 2>&1; ret=$?; if [[ 0 -ne $ret ]]; then
             echo "install autoconf"
             require_sudoer "sudo apt-get install -y --force-yes autoconf"
-            sudo apt-get install -y --force-yes autoconf; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
+            #sudo apt-get install -y --force-yes autoconf; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
             echo "install autoconf success"
         fi
         
         libtool --help >/dev/null 2>&1; ret=$?; if [[ 0 -ne $ret ]]; then
             echo "install libtool"
             require_sudoer "sudo apt-get install -y --force-yes libtool"
-            sudo apt-get install -y --force-yes libtool; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
+            #sudo apt-get install -y --force-yes libtool; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
             echo "install libtool success"
         fi
         
         if [[ ! -f /usr/include/zlib.h ]]; then
             echo "install zlib1g-dev"
             require_sudoer "sudo apt-get install -y --force-yes zlib1g-dev"
-            sudo apt-get install -y --force-yes zlib1g-dev; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
+            #sudo apt-get install -y --force-yes zlib1g-dev; ret=$?; if [[ 0 -ne $ret ]]; then return $ret; fi
             echo "install zlib1g-dev success"
         fi
     fi
@@ -367,7 +359,6 @@ fi
 # others is invalid.
 if [[ $OS_IS_UBUNTU = NO && $OS_IS_CENTOS = NO && $OS_IS_OSX = NO && $SRS_EMBEDED_CPU = NO && $SRS_EXPORT_LIBRTMP_PROJECT = NO ]]; then
     echo "what a fuck, os not supported."
-    exit 1
 fi
 
 #####################################################################################
@@ -545,15 +536,15 @@ if [ $SRS_HTTP_CALLBACK = YES ]; then
     else
         require_sudoer "install CherryPy-3.2.4"
         echo "install CherryPy-3.2.4"; 
-        (
-            sudo rm -rf ${SRS_OBJS}/CherryPy-3.2.4 && cd ${SRS_OBJS} && 
-            unzip -q ../3rdparty/CherryPy-3.2.4.zip && cd CherryPy-3.2.4 && 
-            sudo python setup.py install
-        )
+#        (
+#            sudo rm -rf ${SRS_OBJS}/CherryPy-3.2.4 && cd ${SRS_OBJS} && 
+#            unzip -q ../3rdparty/CherryPy-3.2.4.zip && cd CherryPy-3.2.4 && 
+#            sudo python setup.py install
+#        )
     fi
     # check status
-    ret=$?; if [[ $ret -ne 0 ]]; then echo "build CherryPy-3.2.4 failed, ret=$ret"; exit $ret; fi
-    if [ ! -f ${SRS_OBJS}/CherryPy-3.2.4/setup.py ]; then echo "build CherryPy-3.2.4 failed."; exit -1; fi
+#    ret=$?; if [[ $ret -ne 0 ]]; then echo "build CherryPy-3.2.4 failed, ret=$ret"; exit $ret; fi
+#    if [ ! -f ${SRS_OBJS}/CherryPy-3.2.4/setup.py ]; then echo "build CherryPy-3.2.4 failed."; exit -1; fi
 fi
 
 if [ $SRS_EXPORT_LIBRTMP_PROJECT = NO ]; then
